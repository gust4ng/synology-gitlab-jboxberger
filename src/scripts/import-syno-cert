#!/bin/sh
. "$(dirname $0)"/common
. "$ETC_PATH"/config

########################################################################################################################
# VARIABLES
########################################################################################################################
FORCE_RENEW=0
SYNO_CERT_DIR="/usr/syno/etc/certificate/_archive"
GITLAB_CERT_DIR="$SHARE_PATH/$SHARE/certs"
GITLAB_CERT="gitlab.crt"
GITLAB_KEY="gitlab.key"

########################################################################################################################
# PARAMETER HANDLING
########################################################################################################################
for i in "$@"
do
    case $i in
        --force-renew)
            FORCE_RENEW=1
        ;;
        *)
            # unknown option
        ;;
    esac
    shift
done



if ! [ -d "$GITLAB_CERT_DIR" ]; then
  mkdir -p "$GITLAB_CERT_DIR"
fi

for current_domain_cert in ${SYNO_CERT_DIR}/*; do
  if [ -d ${current_domain_cert} ] && [ -f ${current_domain_cert}/cert.pem ]; then
		openssl x509 -in ${current_domain_cert}/cert.pem -text | grep DNS:${HOSTNAME} > /dev/null 2>&1
		domain_found=$?
		if [ "${domain_found}" = "0" ]; then
			# time of last file change, seconds since Epoch
			last_change_cert_key=$(stat -c %Y ${current_domain_cert}/privkey.pem)
			if [ -f ${GITLAB_CERT_DIR}/${GITLAB_KEY} ];then
				last_change_gitlab_cert_key=$(stat -c %Y ${GITLAB_CERT_DIR}/${GITLAB_KEY})
			else
				last_change_gitlab_cert_key=0
			fi
			if [ ${last_change_gitlab_cert_key} -le ${last_change_cert_key} ] || [ $FORCE_RENEW = 1 ]; then

				echo "gitlab ssl certificate is outdated... updating from domain certificate"
				cp ${current_domain_cert}/privkey.pem ${GITLAB_CERT_DIR}/${GITLAB_KEY}
				cat ${current_domain_cert}/cert.pem ${current_domain_cert}/fullchain.pem > ${GITLAB_CERT_DIR}/${GITLAB_CERT}

				if ! [ -f "$GITLAB_CERT_DIR/dhparam.pem" ] && [ -f "/usr/syno/etc/ssl/dh2048.pem" ]; then
					cp "/usr/syno/etc/ssl/dh2048.pem" "$GITLAB_CERT_DIR/dhparam.pem"
				fi

				echo "changing ownership of gitlab certificates"
				chmod 400 ${GITLAB_CERT_DIR}/*

				echo "restarting gitlab container to activate new certificate"
				$SYNO_WEBAPI --exec api=SYNO.Docker.Container version=1 method=stop name="$GITLAB_NAME"
				$SYNO_WEBAPI --exec api=SYNO.Docker.Container version=1 method=start name="$GITLAB_NAME"
			else
				echo "nothing to do, gitlab ssl certifiacte is same or newer than the domain ssl certificate"
			fi
		fi
	fi
done
